version: "3.9"

services:
  workspace:
    container_name: ${PROJECT_NAME:-default}-workspace-container
    build:
      context: ./docker/workspace
      args:
        USERNAME: ${USERNAME:-vscode}
        USER_GROUP_NAME: ${USER_GROUP_NAME:-workspace}
        USER_UID: ${USER_UID:-1000}
        USER_GID: ${USER_GID:-1000}
        TMP_PKG: ${TMP_PKG}
        TIME_ZONE: ${TIME_ZONE:-Asia/Tokyo}
    tty: true
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-dev}
      POSTGRES_HOST: ${DB_HOST:-postgres}
      POSTGRES_PORT: ${DB_PORT:-5432}
    volumes:
      - ../:/home/${USERNAME:-vscode}/workspace:cached
    working_dir: /workspace
    networks:
      - internal
      - external
    ports:
      - 5555:5555

  mysql:
    container_name: ${PROJECT_NAME:-default}-mysql-container
    restart: always
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - ${DB_PORT:-3306}:3306
    volumes:
      # - ./docker/mysql/init-tables.sql:/docker-entrypoint-initdb.d/init-tables.sql
      - ../.docker/mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-thisIsReallyStrongPassword123}
      # MYSQL_DATABASE: ${DB_DATABASE:-dev}
      MYSQL_USER: ${DB_USER:-mysql}
      MYSQL_PASSWORD: ${DB_PASSWORD:-thisIsReallyStrongPassword123}
    networks:
      - internal
      - external

  rabbitMQ:
    image: rabbitmq:3.9.13-management-alpine
    container_name: ${PROJECT_NAME:-default}-rabbitMQ-container
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ../.docker/rabbitmqdata:/var/lib/rabbitmq
      - ../.docker/rabbitmqlog:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-rabbitmq}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-rabbitmq}
    hostname: rabbitmq
    networks:
      - internal
      - external

  nginx:
    build:
      context: ./docker/nginx
    container_name: ${PROJECT_NAME:-default}-nginx-container
    ports:
      - 3333:80
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
    - internal
    - external

# https://www.timedia.co.jp/tech/20220628-tech/
networks:
  internal:
    driver: bridge
    internal: true
  external:
    driver: bridge
    internal: false
